% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_mvoslr_by_a.R
\name{power_mvoslr_by_a}
\alias{power_mvoslr_by_a}
\title{Estimation of power of group-sequential multivariate one-sample log-rank test via simulation with varying accrual durations}
\usage{
power_mvoslr_by_a(
  reference_model,
  events,
  analysis_dates,
  accrual_durations,
  recruitment_speed,
  hazard_ratios = NULL,
  cum_hazard_functions_alternative = NULL,
  norm = "l2",
  boundaries = "obf",
  alpha = 0.05,
  weights = NULL,
  time_steps = 100,
  simulation_runs = 1000
)
}
\arguments{
\item{reference_model}{Specification of the reference model against which the new data is tested. Should be an object of class "reference_model"}

\item{events}{List of (composite) events that shall be investigated}

\item{analysis_dates}{Vector of calendar dates of analyses. Calendar date of final analysis is fixed.}

\item{accrual_durations}{Vector of durations of accrual period}

\item{recruitment_speed}{Number of patients that can be recruited during one unit of time.}

\item{hazard_ratios}{Specification of alternative hypothesis. One can either choose a single hazard ratio which then applies
to each transition or a single hazard ratio for each transition in the model.}

\item{cum_hazard_functions_alternative}{If non-proportional transition intensities are anticipated, the transition intensities
for all transitions, need to be specified here. If this argument is specified, it
overrules the argument \code{hazard_ratios}.}

\item{norm}{Use either \eqn{L^2}-norm (\code{norm = "l2"}, default value) or \eqn{L^\infty}-norm (\code{norm = "linf"}) of vector of test statistics to compute stagewise p-values}

\item{boundaries}{Use either O'Brien-Fleming'S (\code{boundaries = "obf"}, default value) or Pocock's (\code{boundaries = "pocock"}) sequential decision boundaries}

\item{alpha}{Choose type I error rate (default value = 0.05)}

\item{weights}{Choose weights for inverse normal combination of stagewise p-values. Sum of squared values needs to sum up to 1.}

\item{time_steps}{As the multi-state model data will be simulated with the \code{mstate}-package, the transition intensities need
to be discretized. The number of time steps in which the intensities will be discretized can be specified here.
The time horizon over which the discretization happens is the calndar date of the last analysis.}

\item{simulation_runs}{The number of simulation runs to estimate the power can be specified here.}
}
\value{
List of 3:
\itemize{
\item power - Overall power of the procedure under the specified alternative for each accrual duration
\item rejection_stages - Summary of stages in which the null hypothesis is rejected for each accrual duration
\item means - Mean value of the multivariate process from which test statistics are computed at each stage and for each accrual duration
}
For the sake of clarity of the output, mean estimated (co)variance matrices are not reported here.
}
\description{
In this case the calendar dates of all analyses are fixed. As the accrual duration can be varied, the minimum follow-up
duration varies.
}
\examples{
#Setup of reference multi-state model (here: simple illness-death model)
library(mstate)
tmat_example <- transMat(x = list(c(2,3),c(3),c()), names = c("a", "b", "c"))
number_of_trans_example <- dim(to.trans2(tmat_example))[1]
model_type_example <- "SM"
cumhaz_12_example <- function(t) t^1.1
cumhaz_13_example <- function(t) t^1.2
cumhaz_23_example <- function(t) t^0.9
cum_hazards_example <- list(cumhaz_12_example, cumhaz_13_example, cumhaz_23_example)
reference_model_example <- new_reference_model(transition_matrix = tmat_example,
                                               intensities = cum_hazards_example,
                                               type = model_type_example)
analysis_dates_example <- c(1, 2)
events_example <- list(c(2,3), c(3))
names(events_example) <- c("PFS", "OS")
accrual_durations_example <- seq(0.5, 1.5, 0.2)
recruitment_speed_example <- 100
#In this example, the alternative is specified via separate hazard ratios for each transition
hazard_ratios_example <- c(1.4, 1.2, 1.35)
power_mvoslr_by_a(reference_model = reference_model_example, events = events_example,
                  analysis_dates = analysis_dates_example,
                  accrual_durations = accrual_durations_example,
                  recruitment_speed = recruitment_speed_example,
                  hazard_ratios = hazard_ratios_example, simulation_runs = 10)
}
